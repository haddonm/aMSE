% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/domse.R
\name{do_MSE}
\alias{do_MSE}
\title{do_MSE an encapsulating function to hold the details of a single run}
\usage{
do_MSE(
  rundir,
  controlfile,
  datadir,
  hsargs,
  hcrfun,
  sampleCE,
  sampleFIS,
  sampleNaS,
  getdata,
  calcpopC,
  varyrs = 7,
  startyr = 42,
  cleanslate = FALSE,
  verbose = FALSE,
  doproject = TRUE,
  ndiagprojs = 3,
  openfile = TRUE,
  savesauout = FALSE
)
}
\arguments{
\item{rundir}{the full path to the directory in which all files relating to a
particular run are to be held. If datadir != rundir then the main data
files are kept in datadir. The juridictionHS.R can be held in either.}

\item{controlfile}{the filename of the control file present in rundir
containing information regarding the particular run.}

\item{datadir}{the directory in which the SAU data file is to be found. This
will usually be the rundir for the scenario run but if the data file is
to be shared among a set of scenarios it will be more efficient to define
a separate datadir}

\item{hsargs}{the constants used to define the workings of the hcr}

\item{hcrfun}{the name of the harvest control rule that is used to
calculate the aspirational catches by SAU or TAC by zone for the
following year}

\item{sampleCE}{a function from jurisdictionHS.R that generates the CPUE
statistics from the projected data}

\item{sampleFIS}{a function from jurisdictionHS.R that generates the FIS
statistics}

\item{sampleNaS}{a function from jurisdictionHS.R that generates the
Numbers-at-size samples}

\item{getdata}{a function that gathers all the data required by the hcrfun
and combines it into an hcrdata object ready for the hcrfun}

\item{calcpopC}{a function that takes the output from hcrfun (either the
aspirational catch x SAU or TAC x zone) and generates the actual catch
per population in each SAU expected in the current year.}

\item{varyrs}{how many years at the end of the conditioning on the fishery,
data into zoneDD, to which to add recruitment variation, default = 7,
which suits the Tasmanian west coast. Used in prepareprojection}

\item{startyr}{the index for the first year of the conditioning dynamics to
include in the plotted cpue trajectories, to give startyr:indexoflastyear.
used in sauplots.}

\item{cleanslate}{should the directory be emptied of all files first? All
html, png, RData, and css files in the directory will be deleted.
default = FALSE. This is obviously a very powerful and potentially
dangerous argument, hence it needs to be set =TRUE explicitly. It does
not delete any .csv files so if the rundir is used to store the data for
the run then 'cleanslate' will not affect the data or any .R files.}

\item{verbose}{Should progress comments be printed to console, default=FALSE}

\item{doproject}{should the projections be run. default = TRUE. When
conditioning the operating model this should be set to FALSE to focus
the program on the production of the completely conditioned zone and its
outputs.}

\item{ndiagprojs}{the number of replicate trajectories to plot in the
diagnostics tab to illustrate ndiagprojs trajectories to ensure that
such projections appear realistic; default=3}

\item{openfile}{should the HTML pages be opened automatically? default=TRUE}

\item{savesauout}{should the sau dynamics object be saved as an sauoutD.RData
file? 100 replicates of 56 populations for 58 years of conditioning and
30 years of projection = about 5.7 Mb. default=FALSE.}
}
\value{
a large list containing tottime, projtime, starttime, glb, ctrl,
    zoneDD, zoneDP, projC, condC, sauout, and outzone
}
\description{
do_MSE is a form of meta-function that contains the code and
    function calls that constitute a single scenario run for aMSE. This is
    the reason the argument list is as long as it is. The code has been
    encapsulated like this to simplify development, maintenance, and
    distribution. Already with the number of variant conditioning examples
    produced as tests of the code-base, errors have arisen through a failure
    to propagate all changes to the code now in this function to all the
    separate MSE run files used to manage each scenario. A potential flaw
    lies with the need to apply the jurisdictionHS functions to any
    historical fishery data used to condition the operating model, ready for
    the first year of the projections. Currently, the code used is unique to
    the Tasmanian case and this obviously still requires generalization.
    This may require a new function to be produced in each jurisdictionHS.R
    file, but that is still under consideration. Part of the development of
    this meta-function will be to further articulate the generation of
    results, and the inclusion of error traps on the argument list entries.
    To aid in the conditioning the option of not calculating the productivity
    has been added. By default it will occur and when projecting it will also
    always occur.
}
\examples{
print("wait on suitable data sets in data")
}
\seealso{
{
 \link{makeequilzone}, \link{dohistoricC}, \link{prepareprojection},
 \link{doprojections}
}
}
