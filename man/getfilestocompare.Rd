% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aMSE_utils.R
\name{getfilestocompare}
\alias{getfilestocompare}
\title{getfilestocompare extracts data from aMSE scenario RData files}
\usage{
getfilestocompare(
  outdir,
  filenames,
  altlabel = NULL,
  verbose = TRUE,
  listtoenv = FALSE
)
}
\arguments{
\item{outdir}{a directory containing the RData files to be compared. If the
files are stored in multiple locations then set outdir = '' and it will
be ignored.}

\item{filenames}{a vector of filenames. If outdir = '' then each filename
will need to include the full path. If outdir is a specific directory
then only the filenames c(x.RData,y.RData, ...) are required.}

\item{altlabel}{default = NULL. If the runlabels for each scenario are too
long to allow plots to use them sensibly in their legends, then shorter,
alternative labels can be given as a vector of the same length as the
number of files.}

\item{verbose}{progress statements sent to the console, default=TRUE}

\item{listtoenv}{default=FALSE. If you wish to push all the extracted
components to the global environment then set this to TRUE. This will
allow easy access, otherwise pull out the bits manually from the
invisible output.}
}
\value{
a large invisible list of lists.
}
\description{
getfilestocompare is used to extract the main components from
    one or more stored aMSE RData files. This has use when wanting to explore
    alternative tabulations or plots and for examining the internal details
    of one or more scenario runs. It is a version of routines built into the
    do_comparison function. Be careful with the use of the listtoenv
    argument. If set to true then all the objects are extracted automatically
    into the global environment. Each scenario is named afer the runlabel,
    but if you are a fan of long runlabels then the option of devising
    shorter labels for plot legend is provided by the altlabel argument.
}
\examples{
\dontrun{
  library(aMSE)  # example syntax
  library(codeutils)
  library(hplot)
  dropdir <- getDBdir()
  outdir <- pathtopath(dropdir,"National abalone MSE/RData/")
  files <- dir(outdir)
  printV(files)
  comps <- getfilestocompare(outdir=outdir,filenames=files[c(24,21,28)],
                             altlabel=c("TT_BC","TV_BC","TS_BC"),
                             verbose=TRUE,listtoenv=FALSE)
  prods <- comps$prods
}
}
