% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamics.R
\name{oneyearsauC}
\alias{oneyearsauC}
\title{oneyearsauC conducts one year's dynamics using catch not harvest}
\usage{
oneyearsauC(
  zoneC,
  zoneDD,
  catchsau,
  year,
  sigmar,
  Ncl,
  sauindex,
  movem,
  recvar = TRUE
)
}
\arguments{
\item{zoneC}{the constant portion of the zone with a list of
properties for each population}

\item{zoneDD}{the dynamics portion of the zone, with matrices and
arrays for the dynamic variables of the dynamics of the
operating model, potentially depleted prior to applciation of historical
catches.}

\item{catchsau}{a vector of catches to be taken in the year from each SAU}

\item{year}{the year of the dynamics, would start in year 2 as year
1 is the year of initiation.}

\item{sigmar}{the variation in recruitment dynamics, set to 1e-08
when searching for an equilibria.}

\item{Ncl}{the number of size classes used to describe size, global Nclass}

\item{sauindex}{the sau index for each population}

\item{movem}{the larval dispersal movement matrix, global move}

\item{recvar}{should recruitment variation be included, default=TRUE}
}
\value{
a list containing a revised dynamics list
}
\description{
oneyearsauC conducts one year's dynamics in the simulation
    using historical SAU catches rather than harvest rates. The harvest rates
    are estimated after first estimating the exploitable biomass.
    returning the revised zoneD, which will have had a single year
    of activity included in each of its components.
}
\examples{
print("Wait on new data")
# data(zone)
# zoneC <- zone$zoneC
#  glb <- zone$glb
 #zoneD <- zone$zoneD
 #Nc <- glb$Nclass
 #nyrs <- glb$Nyrs
 #catch <- 900.0 # larger than total MSY ~ 870t
 #B0 <- getvar(zoneC,"B0")
 #totB0 <- sum(B0)
 #prop <- B0/totB0
 #catchpop <- catch * prop
 #for (yr in 2:nyrs)
 #  zoneD <- oneyearC(zoneC=zoneC,zoneD=zoneD,Ncl=Nc,
 #                  catchp=catchpop,year=yr,sigmar=1e-08,
 #                  npop=glb$numpop,movem=glb$move)
 #str(zoneD)
 #round(zoneD$catchN[60:105,1:5,1],1)
}
