% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inputfiles.R
\name{readregionfile}
\alias{readregionfile}
\title{readregionfile reads in the constants for the region}
\usage{
readregionfile(indir, infile)
}
\arguments{
\item{indir}{directory in which to find the region file}

\item{infile}{character string with filename of the region file}
}
\value{
eight objects, four vectors, 4 numbers, and a list of five
    objects
\itemize{
  \item SMUnames the labels given to each SMU
  \item SMUpop the number of populations in each SMU, in sequence
  \item minc scaler defining the mid point of the smallest size class
  \item cw scaler defining the class width
  \item randomseed used to ensure that each simulation run starts
      in the same place. Could use getseed() to produce this.
  \item outyear a vector of three, with Nyrs, fixyear, and firstyear
  \item projLML the LML expected in each projection year, a vector
  \item globals a list containing numpop, nSMU, midpts, Nclass, and
      Nyrs
}
}
\description{
with the region filename from the control file the
    readregionfile will read the data from a csv file arranged with
    a standard layout. Once again this uses the utility functions
    for reading and parsing lines of text. This is illustrated by
    the function makeregionfile, which produces an example *.csv
    file that can then be customized to suit your own simulations.
    Each required section contains a series of constants which are
    read in individually,so their labels are equally important.
}
\examples{
\dontrun{
datadir <- "./../../rcode2/aMSE/data-raw/"
ctrlfile <- "control.csv"
ctrl <- readctrlfile(datadir,ctrlfile)
reg1 <- readregionfile(datadir,ctrl$regionfile)
str(reg1)
}
}
