% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamics.R
\name{depletepop}
\alias{depletepop}
\title{depletepop resets zoneD to an input depletion level}
\usage{
depletepop(zoneC, zoneD, glob, depl, product, len = 15)
}
\arguments{
\item{zoneC}{the constants components of the simulated zone}

\item{zoneD}{the dynamic components of the simulated zone}

\item{glob}{the general global variables}

\item{depl}{a vector of target depletion levels for each SAU}

\item{product}{the production curve matrix from doproduction}

\item{len}{the number of intervals in the trial harvest rates}
}
\value{
a revised zoneD object
}
\description{
depletepop resets the depletion level of the whole
    zone and does this by searching for the harvest rate that
    leads to the sum of the mature biomass, across populations,
    divided by the sum of the effective B0 across populations is
    as close as possible to the desired depletion level. This means
    the individual populations will likely vary around the target
    depletion, but across the zone it will be correct. The
    depletion is measured relative to the effective B0 as that
    takes account of any larval dispersal. This function uses the
    production curve matrix to search for harvest rates that bound
    the target depletion and then re-searches across those bounds
    using len intervals.
}
\examples{
\dontrun{
  data(zone1)
  glb <- zone1$globals
  data(constants)
  ans <- makezoneC(zone1,constants)
  zoneC <- ans$zoneC
  glb <- ans$glb  # now contains the move matrix
  ans <- makezone(glb,zoneC)
  zoneC <- ans$zoneC
  zoneD <- ans$zoneD
  ans2 <- modzoneC(zoneC,zoneD,glb)
  zoneC <- ans2$zoneC  # now has MSY and deplMSY
  product <- ans2$product
  zoneDD <- depletepop(zoneC,zoneD,glb,depl=0.3,product)
  sum((zoneDD$matureB[1,]/sum(zoneDD$matureB[1,]))*zoneDD$deplsB[1,])
  mean(zoneDD$deplsB[1,])
}
}
